# Generated by Django 4.2.7 on 2023-12-04 23:14

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('key', models.TextField()),
                ('active', models.BooleanField(default=True)),
                ('permission', models.IntegerField(choices=[(0, 'Admin'), (1, 'Moderator'), (2, 'Supporter'), (3, 'Public')], default=3)),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block', models.TextField(blank=True, default='')),
                ('block_code', models.TextField(blank=True, default='')),
                ('code', models.TextField(unique=True)),
                ('code_alt', models.TextField(blank=True)),
                ('code_arena', models.TextField(blank=True)),
                ('code_keyrune', models.TextField(blank=True)),
                ('code_mtgo', models.TextField(blank=True)),
                ('code_parent', models.TextField(blank=True)),
                ('count_cards', models.IntegerField()),
                ('count_printed', models.IntegerField(blank=True, null=True)),
                ('count_tokens', models.IntegerField(default=0)),
                ('date_released', models.DateField()),
                ('id_cardmarket', models.IntegerField(blank=True, default=None, null=True)),
                ('id_cardmarket_extras', models.IntegerField(blank=True, default=None, null=True)),
                ('id_cardsphere', models.IntegerField(blank=True, default=None, null=True)),
                ('id_oracle', models.TextField(unique=True)),
                ('id_tcgplayer', models.IntegerField(blank=True, default=None, null=True)),
                ('name', models.TextField()),
                ('name_cardmarket', models.TextField(blank=True)),
                ('is_digital_only', models.BooleanField(default=False)),
                ('is_foil_only', models.BooleanField(default=False)),
                ('is_foreign_only', models.BooleanField(default=False)),
                ('is_nonfoil_only', models.BooleanField(default=False)),
                ('is_paper_only', models.BooleanField(default=False)),
                ('is_preview', models.BooleanField(default=False)),
                ('scryfall_icon_uri', models.TextField()),
                ('type', models.TextField(choices=[('core', 'Core'), ('expansion', 'Expansion'), ('masters', 'Masters'), ('alchemy', 'Alchemy'), ('masterpiece', 'Masterpiece'), ('arsenal', 'Arsenal'), ('from_the_vault', 'From the Vault'), ('spellbook', 'Spellbook'), ('premium_deck', 'Premium Deck'), ('duel_deck', 'Duel Deck'), ('draft_innovation', 'Draft Innovation'), ('treasure_chest', 'Treasure Chest'), ('commander', 'Commander'), ('planechase', 'Planechase'), ('archenemy', 'Archenemy'), ('vanguard', 'Vanguard'), ('funny', 'Funny'), ('starter', 'Starter'), ('box', 'Box'), ('promo', 'Promo'), ('token', 'Token'), ('memorabilia', 'Memorabilia'), ('minigame', 'Minigame')], default='expansion')),
            ],
        ),
        migrations.CreateModel(
            name='SymbolRarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SymbolCollectionSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('parent', models.CharField(blank=True, max_length=10, null=True)),
                ('supported', models.ManyToManyField(to='hexproof.symbolrarity')),
            ],
        ),
    ]
