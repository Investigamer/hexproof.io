{
  "components": {
    "schemas": {
      "APIKey": {
        "description": "API object schema for API Keys.",
        "properties": {
          "active": {
            "title": "Active",
            "type": "boolean"
          },
          "key": {
            "title": "Key",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "permission": {
            "title": "Permission",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "key",
          "active",
          "permission"
        ],
        "title": "APIKey",
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Defines the object structure of an error response.",
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "details": {
            "default": "Resource not found!",
            "title": "Details",
            "type": "string"
          },
          "object": {
            "default": "error",
            "title": "Object",
            "type": "string"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusCode"
              }
            ],
            "default": 404
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings"
          }
        },
        "title": "ErrorResponse",
        "type": "object"
      },
      "Manifest": {
        "properties": {
          "meta": {
            "$ref": "#/components/schemas/Meta"
          },
          "set": {
            "$ref": "#/components/schemas/SetSymbolManifest"
          },
          "watermark": {
            "$ref": "#/components/schemas/WatermarkSymbolManifest"
          }
        },
        "required": [
          "meta",
          "set",
          "watermark"
        ],
        "title": "Manifest",
        "type": "object"
      },
      "Meta": {
        "properties": {
          "date": {
            "title": "Date",
            "type": "string"
          },
          "uri": {
            "title": "Uri",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          }
        },
        "required": [
          "date",
          "version",
          "uri"
        ],
        "title": "Meta",
        "type": "object"
      },
      "Set": {
        "description": "Entire Set object as an API return schema.",
        "properties": {
          "block": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block"
          },
          "block_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Code"
          },
          "code": {
            "title": "Code",
            "type": "string"
          },
          "code_alt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Alt"
          },
          "code_arena": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Arena"
          },
          "code_keyrune": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Keyrune"
          },
          "code_mtgo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Mtgo"
          },
          "code_parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code Parent"
          },
          "code_symbol": {
            "title": "Code Symbol",
            "type": "string"
          },
          "count_cards": {
            "title": "Count Cards",
            "type": "integer"
          },
          "count_printed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count Printed"
          },
          "count_tokens": {
            "title": "Count Tokens",
            "type": "integer"
          },
          "date_released": {
            "title": "Date Released",
            "type": "string"
          },
          "flags": {
            "$ref": "#/components/schemas/SetFlags"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "id_cardmarket": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Cardmarket"
          },
          "id_cardmarket_extras": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Cardmarket Extras"
          },
          "id_cardsphere": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Cardsphere"
          },
          "id_tcgplayer": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id Tcgplayer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "name_cardmarket": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Cardmarket"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "uris_scryfall": {
            "$ref": "#/components/schemas/SetURIScryfall"
          },
          "uris_symbol": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Uris Symbol",
            "type": "object"
          }
        },
        "required": [
          "block",
          "block_code",
          "code",
          "code_alt",
          "code_arena",
          "code_keyrune",
          "code_mtgo",
          "code_parent",
          "code_symbol",
          "count_cards",
          "count_printed",
          "count_tokens",
          "date_released",
          "flags",
          "id",
          "id_cardmarket",
          "id_cardmarket_extras",
          "id_cardsphere",
          "id_tcgplayer",
          "name",
          "name_cardmarket",
          "type",
          "uris_scryfall",
          "uris_symbol"
        ],
        "title": "Set",
        "type": "object"
      },
      "SetFlags": {
        "description": "Boolean flags for the Set object.",
        "properties": {
          "is_digital_only": {
            "title": "Is Digital Only",
            "type": "boolean"
          },
          "is_foil_only": {
            "title": "Is Foil Only",
            "type": "boolean"
          },
          "is_foreign_only": {
            "title": "Is Foreign Only",
            "type": "boolean"
          },
          "is_nonfoil_only": {
            "title": "Is Nonfoil Only",
            "type": "boolean"
          },
          "is_paper_only": {
            "title": "Is Paper Only",
            "type": "boolean"
          },
          "is_preview": {
            "title": "Is Preview",
            "type": "boolean"
          }
        },
        "required": [
          "is_digital_only",
          "is_foil_only",
          "is_foreign_only",
          "is_nonfoil_only",
          "is_paper_only",
          "is_preview"
        ],
        "title": "SetFlags",
        "type": "object"
      },
      "SetSymbolManifest": {
        "properties": {
          "aliases": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Aliases",
            "type": "object"
          },
          "rarities": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Rarities",
            "type": "object"
          },
          "routes": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Routes",
            "type": "object"
          },
          "symbols": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "title": "Symbols",
            "type": "object"
          }
        },
        "required": [
          "aliases",
          "routes",
          "rarities",
          "symbols"
        ],
        "title": "SetSymbolManifest",
        "type": "object"
      },
      "SetURIScryfall": {
        "description": "Scryfall URI's for Set object.",
        "properties": {
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "object": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Object"
          },
          "page": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "parent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Search"
          }
        },
        "title": "SetURIScryfall",
        "type": "object"
      },
      "StatusCode": {
        "description": "Enumerates response status codes which indicate a successful response or a type of\nerror with the request.",
        "enum": [
          200,
          400,
          403,
          404,
          405,
          410,
          500,
          501,
          502
        ],
        "title": "StatusCode",
        "type": "integer"
      },
      "WatermarkSymbolManifest": {
        "properties": {
          "routes": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Routes",
            "type": "object"
          },
          "symbols": {
            "items": {
              "type": "string"
            },
            "title": "Symbols",
            "type": "array"
          }
        },
        "required": [
          "routes",
          "symbols"
        ],
        "title": "WatermarkSymbolManifest",
        "type": "object"
      },
      "WatermarkSymbolURI": {
        "description": "Endpoint URI's for all 'SymbolCollectionWatermark' objects.\nWatermarks divided into 'watermarks' and 'watermarks_set'.",
        "properties": {
          "watermarks": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Watermarks",
            "type": "object"
          },
          "watermarks_set": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Watermarks Set",
            "type": "object"
          }
        },
        "required": [
          "watermarks",
          "watermarks_set"
        ],
        "title": "WatermarkSymbolURI",
        "type": "object"
      }
    }
  },
  "info": {
    "description": "",
    "title": "Hexproof API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/keys/{name}": {
      "get": {
        "description": "Retrieve an API key that is currently active.\n\nArgs:\n    request (HttpRequest): Django request object.\n    name (str): Name of the key to look for.\n\nReturns:\n    APIKeySchema: An APIKey object if an active key was found, otherwise\n        an error object with a reason code and readable message.",
        "operationId": "api_endpoints_keys_get_key",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKey"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Key"
      }
    },
    "/meta/": {
      "get": {
        "description": "Retrieve a dictionary of all resource metas.\n\nArgs:\n    request: HTTP request object.\n\nReturns:\n    dict: A dictionary of all Meta objects, with keys as 'resource' value.",
        "operationId": "api_endpoints_meta_get_meta_all",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Meta"
                  },
                  "title": "Response",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Meta All"
      }
    },
    "/meta/{resource}": {
      "get": {
        "description": "Retrieve a dictionary of all resource metas.\n\nArgs:\n    request: HTTP request object.\n    resource: Specific 'Meta' resource to look for.\n\nReturns:\n    MetaSchema: A specific MetaSchema object matching a resource value.",
        "operationId": "api_endpoints_meta_get_meta",
        "parameters": [
          {
            "in": "path",
            "name": "resource",
            "required": true,
            "schema": {
              "title": "Resource",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meta"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Meta"
      }
    },
    "/sets/": {
      "get": {
        "description": "Returns a dictionary of data objects for all sets by code.",
        "operationId": "api_endpoints_sets_all_sets",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/Set"
                  },
                  "title": "Response",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "All Sets"
      }
    },
    "/sets/{code}": {
      "get": {
        "description": "Returns a data object for a specific set.",
        "operationId": "api_endpoints_sets_get_set",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "title": "Code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Set"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Set"
      }
    },
    "/symbols/manifest/": {
      "get": {
        "description": "Return the current symbol manifest from the `mtg-vectors` repository.\n\nArgs:\n    request: HTTP request object.",
        "operationId": "api_endpoints_symbols_get_symbol_manifest",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manifest"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Manifest"
      }
    },
    "/symbols/package/": {
      "get": {
        "description": "Return the default symbol package from the `mtg-vectors` repository.\n\nArgs:\n    request: HTTP request object.",
        "operationId": "api_endpoints_symbols_get_symbol_package_default",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "summary": "Get Symbol Package Default"
      }
    },
    "/symbols/package/{name}": {
      "get": {
        "description": "Return a specified symbol package from the `mtg-vectors` repository.\n\nArgs:\n    request: HTTP request object.\n    name: Name of the symbol package, options are \"all\" and \"optimized\".",
        "operationId": "api_endpoints_symbols_get_symbol_package",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Package"
      }
    },
    "/symbols/rarity/": {
      "get": {
        "description": "Return a dictionary of all set symbol rarities.\n\nArgs:\n    request: HTTP request object.\n\nReturns:\n    A dictionary where keys are the rarity code, values are the name of the rarity.",
        "operationId": "api_endpoints_symbols_get_symbol_rarities",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Rarities"
      }
    },
    "/symbols/set/": {
      "get": {
        "description": "Return a dictionary of all set symbol collections.\n\nArgs:\n    request: HTTP request object.\n\nReturns:\n    dict[str, SetSymbolURI]: A dictionary where keys are the symbol code, values are URI maps from\n        'SymbolSet' resources.",
        "operationId": "api_endpoints_symbols_get_symbol_set_all",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "title": "Response",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Set All"
      }
    },
    "/symbols/set/{code}": {
      "get": {
        "description": "Returns a URI map for a 'SymbolSet' resource.\n\nArgs:\n    request: HTTP request object.\n    code: 'SymbolSet' identifier code or 'Set' identifier code.\n\nReturns:\n    SetSymbolURI: A URI map from a 'SymbolSet' object.",
        "operationId": "api_endpoints_symbols_get_symbol_set",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "title": "Code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response",
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Set"
      }
    },
    "/symbols/set/{code}/{rarity}": {
      "get": {
        "description": "Returns a specific SVG set symbol asset with a given symbol or set code and rarity.\n\nArgs:\n    request: HTTP request object.\n    code: Symbol code the symbol is defined by, or code the parent set is defined by.\n    rarity: The rarity version of the symbol to return.\n\nReturns:\n    FileResponse: The requested watermark SVG file asset.",
        "operationId": "api_endpoints_symbols_get_symbol_set_rarity",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "title": "Code",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "rarity",
            "required": true,
            "schema": {
              "title": "Rarity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Set Rarity"
      }
    },
    "/symbols/watermark/": {
      "get": {
        "description": "Return a dictionary of all watermark symbol URI's.\n\nArgs:\n    request: HTTP request object.\n\nReturns:\n    WatermarkSymbolURI: A dictionary containing named watermarks and set symbol watermarks.",
        "operationId": "api_endpoints_symbols_get_symbol_watermark_all",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatermarkSymbolURI"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Watermark All"
      }
    },
    "/symbols/watermark/set/{code}": {
      "get": {
        "description": "Returns a watermark 'Set' symbol with a given set symbol code or set code.\n\nArgs:\n    request: HTTP request object.\n    code: Symbol code the symbol is defined by, or code the parent set is defined by.\n\nReturns:\n    FileResponse: The requested watermark SVG file asset.",
        "operationId": "api_endpoints_symbols_get_symbol_watermark_set",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "required": true,
            "schema": {
              "title": "Code",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Watermark Set"
      }
    },
    "/symbols/watermark/{name}": {
      "get": {
        "description": "Returns a specific SVG watermark symbol asset with a given name.\n\nArgs:\n    request: HTTP request object.\n    name: Symbol name the symbol is defined by.\n\nReturns:\n    FileResponse: The requested watermark SVG file asset.",
        "operationId": "api_endpoints_symbols_get_symbol_watermark",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Found"
          },
          "405": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Method Not Allowed"
          },
          "410": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Gone"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Internal Server Error"
          },
          "501": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Not Implemented"
          },
          "502": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Bad Gateway"
          }
        },
        "summary": "Get Symbol Watermark"
      }
    }
  },
  "servers": [
    {
      "description": "Official production server for the Hexproof API.",
      "url": "https://api.hexproof.io"
    },
    {
      "description": "Locally hosted django testing server.",
      "url": "http://localhost:8000"
    }
  ]
}